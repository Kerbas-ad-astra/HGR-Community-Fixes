PART
{


	// --- general parameters ---
	name = SoyDecoupler
	module = Part
	author = Orion

	mesh = model.mu
	rescaleFactor = 1

	// --- node definitions ---
	// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
	node_stack_bottom = 0.0, -0.148, 0.0, 0.0, -1.0, 0.0, 2
	node_stack_top = 0.0, 0.125, 0.0, 0.0, 1.0, 0.0, 2

	// --- FX definitions ---

	fx_gasBurst_white = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, decouple
	sound_decoupler_fire = decouple


	// --- editor parameters ---
	TechRequired = advConstruction
	entryCost = 2800
	cost = 500
	category = Coupling
	subcategory = 0
	title = #SoyDecoupler_Part_title // #SoyDecoupler_Part_title = SoyJuice specialized decoupler
	manufacturer = #SoyDecoupler_Part_manufacturer // #SoyDecoupler_Part_manufacturer = Home Grown Rocket Parts
	description = #SoyDecoupler_Part_description // #SoyDecoupler_Part_description = A decoupler for the SoyJuice. It's unique shape holds the capsule and service module together until reentry.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,1

	// --- standard part parameters ---
	mass = 0.1
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 9
	breakingForce = 200
	breakingTorque = 200
	maxTemp = 2000
	bulkheadProfiles = size1p5
	fuelCrossFeed = False

	stageOffset = 1
	childStageOffset = 1




	tags = #SoyDecoupler_Part_tags // #SoyDecoupler_Part_tags = break decouple explo hgr separat split soy shenzhou

	MODULE
	{
		name = ModuleDecouple
		ejectionForce = 150
		explosiveNodeID = top
	}
	MODULE
	{
		name = ModuleToggleCrossfeed
		crossfeedStatus = false
		toggleEditor = true
		toggleFlight = true
	}
	MODULE
	{
		name = ModuleJettison
		jettisonName = Umbillical
		bottomNodeName = top
		isFairing = False
		jettisonedObjectMass = 0.05
		jettisonForce = 15
		jettisonDirection = 0 0 1
	}
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 127

		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2000
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
	}
}
