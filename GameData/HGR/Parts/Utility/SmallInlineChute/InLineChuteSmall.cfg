PART
{

// --- general parameters ---
	name = InLineChuteSmall
	module = Part
	author = Orion

// --- asset parameters ---
	mesh = model.mu
	scale = 1
	rescaleFactor = 1

// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z, size
	node_stack_bottom = 0.0, -0.2, 0.0, 0.0, -1.0, 0.0, 0
	node_stack_top = 0.0, 0.2, 0.0, 0.0, 1.0, 0.0, 0

// --- FX definitions ---
	sound_parachute_open = activate


// --- editor parameters ---
	TechRequired = survivability
	entryCost = 4600
	cost = 500
	category = Utility
	subcategory = 0
	title = HGR MK.18 Inline Chute
	manufacturer = Home Grown Rocket Parts
	description = A small parachute that you can stack things on top of. How convenient!

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0

// --- standard part parameters ---
	mass = 0.15
	dragModelType = default
	angularDrag = 3
	crashTolerance = 12
	maxTemp = 2000
	bulkheadProfiles = size0
	breakingForce = 100
	breakingTorque = 50
	bodyLiftMultiplier = 0
	stageOffset = -1
		cube = PACKED, 0.1568751,0.6571927,0.4137059, 0.1568751,0.6574146,0.4137059, 0.2767665,0.643122,0.3861047, 0.2767665,0.8638392,0.176505, 0.1602633,0.6515157,0.614841, 0.1602633,0.6718627,0.6371409, 6.735325E-06,0.103434,0.01847693, 0.6306692,0.3626097,0.6123547
		cube = SEMIDEPLOYED, 7.525329,0.2318662,0.5391445, 7.525329,0.227902,0.5391445, 0.5277259,0.06580277,4.172107, 0.5277259,0.1769459,14.9913, 7.588403,0.2288947,0.7006975, 7.588403,0.2283394,0.7967932, 6.556511E-07,8.838122,1.147389E-05, 0.8259839,17.83199,0.8210163
		cube = DEPLOYED, 72.87113,7.589082,4.578267, 72.87113,7.57349,4.578267, 52.80032,8.56859,4.172107, 52.80032,6.532588,14.9913, 73.68147,7.515368,4.551372, 73.68147,7.478362,4.551372, 6.67572E-06,8.838122,0.0001244545, 8.25984,17.83199,8.210144
	}

// ----- DO NOT EDIT BELOW THIS POINT ------

	MODULE
	{
		name = ModuleParachute
		semiDeployedAnimation = semiDeploy
		fullyDeployedAnimation = fullyDeploy
		invertCanopy = false
		autoCutSpeed = 0.5
		capName = cap
		canopyName = Canopy
		stowedDrag = 0.22
		semiDeployedDrag = 1
		fullyDeployedDrag = 500
		minAirPressureToOpen = 0.04
		deployAltitude = 1000
		deploymentSpeed = 2
		semiDeploymentSpeed = 1
		clampMinAirPressure = 0.04
	}

	MODULE
	{
		name = ModuleDecouple
		ejectionForce = 150
		explosiveNodeID = top
	}
	MODULE
	{
		name = ModuleDragModifier
		dragCubeName = SEMIDEPLOYED
		dragModifier = .5
	}
	MODULE
	{
		name = ModuleDragModifier
		dragCubeName = DEPLOYED
		dragModifier = 15
	}
	tags = hgr gemini mercury aero para inline break decouple explo separat split arrest canopy chute decel descen drag entry fall landing re- return safe slow
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 8
		CONSTRAINT
		{
			type = ATMOSPHERE
			value = True
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.2
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.1
			prestige = Significant
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.02
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 1000
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 300
			body = _Home
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1000
			body = _NotHome
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
	}
}
	tags = hgr gemini mercury aero para inline break decouple explo separat split arrest canopy chute decel descen drag entry fall landing re- return safe slow
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 8
		CONSTRAINT
		{
			type = ATMOSPHERE
			value = True
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.2
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.1
			prestige = Significant
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.02
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 1000
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 300
			body = _Home
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1000
			body = _NotHome
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
	}
}
